rpois(n=5,lambda=10)
replicate(100,rpois(n=5,lambda=10)) #perform this operation 100 times
my_pois <-replicate(100,rpois(n=5,lambda=10)) #perform this operation 100 times
my_pois <-replicate(100, rpois(n=5,lambda=10)) #perform this operation 100 times
my_pois <-replicate(100, rpois(5,lambda=10)) #perform this operation 100 times
my_pois <- replicate(100, rpois(5,lambda = 10)) #perform this operation 100 times
my_pois <- replicate(100, rpois(5, 10)) #perform this operation 100 times
my_pois
cm <- colMeans(my_pois)
hist(cm)
play()
rm(my_pois, cm, flips, flips2)
nxt()
d1 <- Sys.Date()
class(d1)
unclass(d1)
d1
d2 <- as.Date("1969-01-01")
unclass(d2)
t1 <- Sys.time()
t1
class(t1)
unclass(t1)
t2 <- as.POSIXlt(Sys.time())
class(t2)
t2
unclass(t2)
str(unclass(t2))
t2$min
weekdays(d1)
months(t1)
quarters(t2)
t3<-"October 17, 1986 08:24"
t4<- strptime(t3, "%B %d, %Y %H:%M")
t4
class(t4)
Sys.time() > t1
Sys.time() - t1
Use difftime(Sys.time(), t1, units = 'days')
Use difftime(Sys.time(), t1, units = "days")
Use difftime(Sys.time(), t1, units = days)
difftime(Sys.time(), t1, units = 'days')
rm(d1, d2, t1, t2, t3, t4)
library(swirl)
swirl()
data(cars)
?cars
head(cars)
plot(cars)
?plot
plot(x = cars$speed, y = cars$dist)
plot(x = cars$dist, y = cars$speed)
plot(cars)
plot(x = cars$speed, y = cars$dist, xlab = "Speed")
plot(x = cars$speed, y = cars$dist, xlab = "Speed", ylab ="Stopping Distance")
plot(x = cars$speed, y = cars$dist, ylab ="Stopping Distance")
plot(x = cars$speed, y = cars$dist, xlab = "Speed", ylab ="Stopping Distance")
plot(x = cars$speed, y = cars$dist, main ="My Plot")
plot(cars, main ="My Plot")
plot(cars, main ="My Plot",sub = "My Plot Subtitle")
plot(cars, sub = "My Plot Subtitle")
plot(cars, col = "red")
plot(cars, col = 2)
plot(cars, xlim = c(10, 15))
plot(cars, pch = 2)
load(mtcars)
data(mtcars)
?boxplot()
?boxplot
Use boxplot(mpg ~ cyl, mtcars) #formula = mpg ~ cyl and data = mtcars
boxplot(mpg ~ cyl, mtcars) #formula = mpg ~ cyl and data = mtcars
hist(mtcars$mpg)
rm(cars, mtcars)
---
output:
html_document:
fig_caption: yes
---
"Reproducible Research: Peer Assessment 1"
============================
## by 'Gopalkriz'
### Date:
```{r echo=FALSE}
Sys.Date()
```
### Coursera - Reproducible Research (Aug 2015 batch)
## Project Introduction
### Dataset: https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip
### ProjectFolder: https://github.com/gopalkriz/RepData_PeerAssessment1
### Local Repository:
```{r ,echo=FALSE}
print("Cloned from github D:/VIVEK/DataAnalysis/Coursera/5 RepRes/RepData_PeerAssessment1")
```
-------------------
##Setting Global Options
arguments set for code chunks to be included in output
```{r setoptions, echo=TRUE}
library(knitr)
opts_chunk$set(echo = TRUE, results = "asis")
```
##Set Working Directory with required Folder Path
```{r Set Working Directory}
WDoriginal <- getwd()
setwd("D:/VIVEK/DataAnalysis/Coursera/5 RepRes/RepData_PeerAssessment1")
```
-------------------
## Project Introduction
About: "quantified self" movement - collect data of personal activity using monitoring devices
Data: collected at 5 minute intervals through out the day for two months from an anonymous individual during October and November, 2012.
Variable: steps taken in 5 minute intervals each day.
Dataset: https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip
ProjectFolder: https://github.com/gopalkriz/RepData_PeerAssessment1
Local Repository:
```{r, echo=FALSE}
print("Cloned from github D:/VIVEK/DataAnalysis/Coursera/5 RepRes/RepData_PeerAssessment1")
```
```{r Upload the Data}
unzip("activity.zip")
Data <- read.csv("activity.csv", header = TRUE, sep =",")
```
```{r Understand the Data}
object.size(Data)
class(Data)
dim(Data); nrow(Data); ncol(Data)
names(Data)
str(Data)
head(Data)
tail(Data)
summary(Data)
```
daysteps <- aggregate(steps ~ date, data = Data, FUN = sum)
par(mfrow = c(1, 1))
par(mar=c(3,2,2,0.5))
plot_001 <-
barplot(daysteps$steps, names.arg = daysteps2$date, xlab = "date", ylab = "steps")
print(plot_001)
par(mfrow = c(1, 1))
par(mar=c(3,2,2,0.5))
plot_001 <- barplot(daysteps$steps, names.arg = daysteps2$date, xlab = "date", ylab = "steps")
plot_001 <- barplot(daysteps$steps, names.arg = daysteps$date, xlab = "date", ylab = "steps")
dev.copy(png,'plot_001.png')
plot_001
dev.off()
dev.print(png,'plot_001.png')
print(plot_001)
plot_001
print(
print(plot_001)
dev.copy(png,'plot_001.png')
print(plot_001)
plot_001 <- barplot(daysteps$steps, names.arg = daysteps$date, xlab = "date", ylab = "steps")
par(mfrow = c(1, 1))
par(mar=c(3,2,2,0.5))
plot_001 <- barplot(daysteps$steps, names.arg = daysteps$date, xlab = "date", ylab = "steps")
par(mfrow = c(1, 1))
par(mar=c(3,2,2,0.5))
plot_001 <- barplot(daysteps$steps, names.arg = daysteps$date, xlab = "date", ylab = "steps")
par(mfrow = c(1, 1))
par(mar=c(3,2,2,0.5))
plot_001 <- barplot(daysteps$steps, names.arg = daysteps$date, xlab = "date", ylab = "steps")
par(mar=c(3,2,1,0.5))
plot_001 <- barplot(daysteps$steps, names.arg = daysteps$date, xlab = "date", ylab = "steps")
par(mar=c(3,1,1,0.5))
plot_001 <- barplot(daysteps$steps, names.arg = daysteps$date, xlab = "date", ylab = "steps")
par(mar=c(2,1,1,0.5))
plot_001 <- barplot(daysteps$steps, names.arg = daysteps$date, xlab = "date", ylab = "steps")
par(mar=c(1,1,1,0.5))
plot_001 <- barplot(daysteps$steps, names.arg = daysteps$date, xlab = "date", ylab = "steps")
par(mar=c(0,0,0,0))
plot_001 <- barplot(daysteps$steps, names.arg = daysteps$date, xlab = "date", ylab = "steps")
plot_001
print(plot_001)
dev.off()
print(plot_001)
plot_001
plot_001 <- barplot(daysteps$steps, names.arg = daysteps$date, xlab = "date", ylab = "steps")
dev.copy(png,'plot_001.png')
plot_001)
plot_001
dev.off()
dev.copy(png,'plot_001.png')
print(plot_001)
dev.off()
dev.copy(png,'plot_001.png');
dev.print(png,'plot_001.png')
dev.copy(png,'plot_001.png')
plot_001 <- barplot(daysteps$steps, names.arg = daysteps$date, xlab = "date", ylab = "steps")
dev.copy(png,'plot_001.png')
plot_001
dev.off()
dev.copy(png,'plot_001.png')
dev.off()
invisible(plot_001)
dev.off()
plot_001 <- barplot(daysteps$steps, names.arg = daysteps$date, xlab = "date", ylab = "steps")
dev.copy(png,'plot_001.png')
invisible(plot_001)
dev.off()
dev.copy(png,'plot_001.png')
invisible(plot_001)
dev.off()
dev.copy(png,'plot_001.png')
invisible(plot_001)
dev.off()
dev.set
plot_001 <- barplot(daysteps$steps, names.arg = daysteps$date, xlab = "date", ylab = "steps")
dev.copy(png,'plot_001.png')
invisible(plot_001)
dev.off()
plot_001 <- barplot(daysteps$steps, names.arg = daysteps$date, xlab = "date", ylab = "steps", main = Activity: total steps per day)
plot_001 <- barplot(daysteps$steps, names.arg = daysteps$date, xlab = "date", ylab = "steps", main = Activity: total steps per day")
plot_001 <- barplot(daysteps$steps, names.arg = daysteps$date, xlab = "date", ylab = "steps", par(main = Activity: total steps per day"))
plot_001 <- barplot(daysteps$steps, names.arg = daysteps$date, xlab = "date", ylab = "steps", main = "Activity: total steps per day")
par(mar=c(3,2,2,0.5))
par(mfrow = c(1, 1))
plot_001 <- barplot(daysteps$steps, names.arg = daysteps$date, xlab = "date", ylab = "steps", main = "Activity: total steps per day")
par(mar=c(3,3,2,0.5))
plot_001 <- barplot(daysteps$steps, names.arg = daysteps$date, xlab = "date", ylab = "steps", main = "Activity: total steps per day")
par(mar=c(3,3,3,0.5))
plot_001 <- barplot(daysteps$steps, names.arg = daysteps$date, xlab = "date", ylab = "steps", main = "Activity: total steps per day")
par(mar=c(3,3,3,5))
plot_001 <- barplot(daysteps$steps, names.arg = daysteps$date, xlab = "date", ylab = "steps", main = "Activity: total steps per day")
par(mar=c(2,3,3,0.5))
plot_001 <- barplot(daysteps$steps, names.arg = daysteps$date, xlab = "date", ylab = "steps", main = "Activity: total steps per day")
par(mar=c(4,3,3,0.5))
plot_001 <- barplot(daysteps$steps, names.arg = daysteps$date, xlab = "date", ylab = "steps", main = "Activity: total steps per day")
par(mar=c(4,4,3,0.5))
plot_001 <- barplot(daysteps$steps, names.arg = daysteps$date, xlab = "date", ylab = "steps", main = "Activity: total steps per day")
par(mar=c(4,4,1,0.5))
plot_001 <- barplot(daysteps$steps, names.arg = daysteps$date, xlab = "date", ylab = "steps", main = "Activity: total steps per day")
par(mfrow = c(1, 1))
par(mar=c(4,4,1,0.5))
plot_001 <- barplot(daysteps$steps, names.arg = daysteps$date, xlab = "date", ylab = "steps", main = "Activity: total steps per day")
dev.copy(png,'plot_001.png')
invisible(plot_001)
dev.off()
par(mfrow = c(1, 1))
par(mar=c(3,2,2,0.5))
Plot_002 <- hist(daysteps$steps) # Histogram of steps per day
dev.copy(png,'plot_002.png')
invisible(plot_002)
dev.off()
Plot_002 <- hist(daysteps$steps, xlab = "steps", ylab = "days counts", main ="Daywise Activity Histogram") # Histogram of steps per day
par(mar=c(4,4,1,0.5))
Plot_002 <- hist(daysteps$steps, xlab = "steps", ylab = "days counts", main ="Daywise Activity Histogram") # Histogram of steps per day
dev.copy(png,'plot_002.png')
invisible(plot_002)
dev.off()
mean(daysteps$steps) #Ans: should be 10766.19
median(daysteps$steps) #Ans:  should be 10765
dayAvg <- aggregate(steps ~ date, data = Data, FUN = mean)
dayAvg
head(dayAvg)
table(dayAvg)
summary(dayAvg)
plot(dayAvg)
plot(dayAvg, type= "l")
plot(dayAvg, type= "p")
plot(dayAvg, type= "b")
plot(dayAvg, type= "h")
head(dayAvg)
plot(dayAvg, type= "l")
StepsGroup <- aggregate(steps ~ interval, data = Data, FUN = mean)
par(mfrow = c(1, 1))
par(mar=c(3,2,2,0.5))
plot_003 <- plot(StepsGroup, type = "l")
invisible(plot_003)
dev.off()
plot_003 <- plot(StepsGroup, type = "l")
dev.copy(png,'plot_003.png')
invisible(plot_003)
dev.off()
StepsGroup <- aggregate(steps ~ interval, data = Data, FUN = mean)
par(mfrow = c(1, 1))
par(mar=c(3,2,2,0.5))
plot_003 <- plot(StepsGroup, type = "l")
dev.copy(png,'plot_003.png')
invisible(plot_003)
par(mar=c(4,4,1,0.5))
plot_003 <- plot(StepsGroup, type = "l", xlab = " Interval", ylab= "Average of steps", main= "Timeseries steps avg by interval")
par(mar=c(4,4,1,0.5))
plot_003 <- plot(StepsGroup, type = "l", xlab = " Interval", ylab= "Average of steps", main= "Timeseries steps avg by interval")
dev.copy(png,'plot_003.png')
invisible(plot_003)
dev.off()
par(mfrow = c(1, 1))
par(mar=c(4,4,1,0.5))
plot_003 <- plot(StepsGroup, type = "l", xlab = " Interval", ylab= "Average of steps", main= "Timeseries steps avg by interval")
dev.copy(png,'plot_003.png')
invisible(plot_003)
dev.off()
StepsGroup$interval[which.max(StepsGroup$steps)] #Ans: 835th Interval
StepsGroup$steps[which.max(StepsGroup$steps)] #Ans: 206.1698
Print("The Interval:")
Print("with the value as average:")
??Print
print("The Interval:")
StepsGroup$interval[which.max(StepsGroup$steps)] #Ans: 835th Interval
print("with the value as average:")
StepsGroup$steps[which.max(StepsGroup$steps)] #Ans: 206.1698
a<-StepsGroup$interval[which.max(StepsGroup$steps)] #Ans: 835th Interval
print("The Interval:", a)
print("The Interval:"; print(a)
sum(is.na(Data)) #Ans: 2304 NAs in entire dataset
sum(is.na(Data$steps)) #col1 has all the NAs
sum(is.na(Data$date)) #col2 does not have missing values
sum(is.na(Data$interval)) #col3 does not have missing values
rm(a)
naughts <- is.na(Data$steps); class(naughts)
cleandata <- merge(Data, StepsGroup, by = "interval")
cleandata$steps.x[naughts] <- cleandata$steps.y[naughts]
View(cleandata)
rm(cleandata)
cleandata <- merge(Data, StepsGroup, by = "interval")
View(cleandata)
cleandata1$steps.x[naughts] <- cleandata$steps.y[naughts]
cleandata1<-cleandata
cleandata1$steps.x[naughts] <- cleandata1$steps.y
cleandata1$steps.x[naughts] <- cleandata1$steps.y[]
cleandata$steps.x[naughts] <- cleandata$steps.y[naughts]
#rm(cleandata1)
View(cleandata)
Data <- cleandata[, c(1:3)]
View(Data)
cleandata<-Data
View(cleandata)
View(Data)
Data <- read.csv("activity.csv", header = TRUE, sep =",")
cleandata<-Data
rm(cleandata1)
View(cleandata)
cleandata<- merge(cleandata, StepsGroup, by = "interval"suffixes = c("",".y"))
cleandata<- merge(cleandata, StepsGroup, by = "interval", suffixes = c("",".y"))
View(cleandata)
cleandata<- merge(cleandata, StepsGroup, by = "interval", suffixes = c("",".avg"))
cleandata<-Data
cleandata<- merge(cleandata, StepsGroup, by = "interval", suffixes = c("",".avg"))
cleandata$steps[naughts] <- cleandata$steps.avg[naughts]
View(cleandata)
cleandata<-Data
age <- c(1,2,NA,4)
age.i <- impute(age)
library(Hmisc)
age <- c(1,2,NA,4)
age.i <- impute(age)
g
age.i
summary(age.i)
is.imputed(age.i)
View(cleandata)
cleandata$steps <- impute(cleandata$steps, fun=mean)
View(cleandata)
barplot(daysteps$steps)
line(cleandata$steps)
barplot(daysteps$steps)
line(cleandata$steps)
View(cleandata)
rm(cleandata)
cleandata$steps <- impute(Data$steps, fun=mean)
rm(cleandata)
cleandata <- Data
View(cleandata)
cleandata$steps <- impute(Data$steps, fun=mean)
cleandataMED <- Data
cleandata$steps <- impute(Data$steps, fun=median)
View(cleandataMED)
cleandata <- Data
cleandata$steps <- impute(Data$steps, fun=mean)
cleandataMED <- Data
cleandataMED$steps <- impute(Data$steps, fun=median)
View(cleandataMED)
rm(cleandata, cleandataMED)
cleandata_mean <- Data
cleandata_median <- Data
cleandata_mean$steps <- impute(Data$steps, fun=mean)
cleandata_median$steps <- impute(Data$steps, fun=median)
barplot(cleandata_mean$steps)
View(cleandata_mean)
barplot(cleandata_mean$steps)
plot(cleandata_mean$steps)
lineplot(cleandata_mean$steps)
barplot(cleandata_mean$steps)
barplot(as.numeric(cleandata_mean$steps))
barplot(as.numeric(cleandata_median$steps))
View(Data)
MainData < - Data
MainData <- Data
Data <- cleandata_mean
View(Data)
dailysteps <- aggregate(steps ~ date, data = Data, FUN = sum)
par(mfrow = c(1, 2))
par(mar=c(4,4,1,0.5))
Plot_004a <- hist(dailysteps$steps) # Histogram of steps per day (clean data)
Plot_004b <- barplot(dailysteps$steps, names.arg = dailysteps$date, xlab = "date", ylab = "steps", col="light blue") #barplot
Plot_004a <- hist(dailysteps$steps, main = "histogram") # Histogram of steps per day (clean data)
Plot_004b <- barplot(dailysteps$steps, names.arg = dailysteps$date, xlab = "date", ylab = "steps", col="light blue", main = "barplot: cleandata_mean)
par(mfrow = c(1, 2))
par(mar=c(4,4,1,0.5))
Plot_004a <- hist(dailysteps$steps, main = "histogram") # Histogram of steps per day (clean data)
Plot_004b <- barplot(dailysteps$steps, names.arg = dailysteps$date, xlab = "date", ylab = "steps", col="light blue", main = "barplot: cleandata_mean)
Plot_004b <- barplot(dailysteps$steps, names.arg = dailysteps$date, xlab = "date", ylab = "steps", col="light blue", main = "barplot: cleandata_mean")
dev.copy(png,'plot_004.png')
dev.off()
Data <- cleandata_median
dailysteps <- aggregate(steps ~ date, data = Data, FUN = sum)
par(mfrow = c(1, 2))
par(mar=c(4,4,1,0.5))
Plot_004a <- hist(dailysteps$steps, main = "histogram: cleandata_mean") # Histogram of steps per day (clean data)
Plot_004b <- barplot(dailysteps$steps, names.arg = dailysteps$date, xlab = "date", ylab = "steps", col="light blue", main = "barplot: cleandata_mean")
dev.copy(png,'plot_004.png')
dev.off()
mean(dailysteps$steps) #Ans: was 10766.19  from data with NA
median(dailysteps$steps) #Ans: was 10765 from data with NA
Data <- cleandata_mean
dailysteps <- aggregate(steps ~ date, data = Data, FUN = sum)
mean(dailysteps$steps)
median(dailysteps$steps)
View(Data)
mean(dailysteps_mean$steps)
dailysteps_mean <- aggregate(steps ~ date, data = cleandata_mean, FUN = sum)
dailysteps_median <- aggregate(steps ~ date, data = cleandata_median, FUN = sum)
mean(dailysteps_mean$steps)
mean(dailysteps_median$steps)
mean(dailysteps_mean$steps)
mean(dailysteps_median$steps)
median(dailysteps_mean$steps)
mean(dailysteps_mean$steps)
mean(dailysteps_median$steps)
median(dailysteps_mean$steps)
median(dailysteps_median$steps)
daytype <- function(date) {
whichday <- weekdays(date)
if (whichday %in% c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday"))
return("weekday")
else (whichday %in% c("Saturday", "Sunday"))
return("weekend")
}
Data <- cleandata_mean
daytype <- function(date) {
whichday <- weekdays(date)
if (whichday %in% c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday"))
return("weekday")
else (whichday %in% c("Saturday", "Sunday"))
return("weekend")
}
Data$date <- as.Date(Data$date)
Data$daytype <- sapply(Data$date, FUN=daytype)
head(Data); table(Data$daytype)
table(sum(is.na(Data)))
table(sum(is.na(MainData)))
Data$date <- as.Date(Data$date)
Data$daytype <- sapply(Data$date, FUN=daytype)
head(Data); table(Data$daytype)
dev.copy(png,'plot005.png')
par(mfrow = c(2, 1))
par(mar=c(3,2,2,0.5))
plot(weekdayAvg , type = "l", main = "Weekday Activty - avg steps", col = "lightblue", lwd=3)
plot(weekendAvg, type = "l", main = "Weekend Activty - avg steps", col = "green", lwd=2)
dev.off()
plot_005a <- plot(weekdayAvg , type = "l", main = "Weekday Activty - avg steps", col = "lightblue", lwd=3)
plot_005b <- plot(weekendAvg, type = "l", main = "Weekend Activty - avg steps", col = "green", lwd=2)
daytype <- function(date) {
whichday <- weekdays(date)
if (whichday %in% c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday"))
return("weekday")
else (whichday %in% c("Saturday", "Sunday"))
return("weekend")
}
Data$date <- as.Date(Data$date)
Data$daytype <- sapply(Data$date, FUN=daytype)
head(Data); table(Data$daytype)
weekdayAvg <- aggregate(steps ~ interval, data = Data, subset = Data$daytype == "weekday", FUN = mean)
weekendAvg <- aggregate(steps ~ interval, data = Data, subset = Data$daytype == "weekend", FUN = mean)
}
weekdayAvg <- aggregate(steps ~ interval, data = Data, subset = Data$daytype == "weekday", FUN = mean)
weekendAvg <- aggregate(steps ~ interval, data = Data, subset = Data$daytype == "weekend", FUN = mean)
par(mfrow = c(2, 1))
par(mar=c(3,2,2,0.5))
plot_005a <- plot(weekdayAvg , type = "l", main = "Weekday Activty - avg steps", col = "lightblue", lwd=3)
plot_005b <- plot(weekendAvg, type = "l", main = "Weekend Activty - avg steps", col = "green", lwd=2)
dev.copy(png,'plot005.png')
dev.off()
par(mfrow = c(1, 1))
par(mar=c(3,2,2,0.5))
plot_006 <- plot(weekdayAvg , type = "l", col = "lightblue", lwd =3, xlab="interval", ylab="avg steps", main ="Activty - avg steps")
lines(weekendAvg, type = "l", col = "green", lwd=2)
legend("topright", legend = "Weekend:green Weekday:blue", box.col=8)
dev.copy(png,'plot006.png')
dev.off()
ls()
rm(age,.age.i,.cleandata_mean,.cleandata_median dailysteps dailysteps_mean,.dailysteps_median Data,.dayAvg,. daysteps,.daytype,.MainData,. naughts,.plot_001,.Plot_002,. plot_003,.Plot_004a,.Plot_004b,.plot_005a,.plot_005b,.plot_006,.StepsGroup WDoriginal weekdayAvg,.weekendAvg)
rm(age, age.i, cleandata_mean, cleandata_median dailysteps dailysteps_mean, dailysteps_median Data, dayAvg,  daysteps, daytype, MainData,  naughts, plot_001, Plot_002,  plot_003, Plot_004a, Plot_004b, plot_005a, plot_005b, plot_006, StepsGroup WDoriginal weekdayAvg, weekendAvg)
rm(age, age.i, cleandata_mean, cleandata_median dailysteps dailysteps_mean, dailysteps_median Data, dayAvg, daysteps, daytype, MainData, naughts, plot_001, Plot_002, plot_003, Plot_004a, Plot_004b, plot_005a, plot_005b, plot_006, StepsGroup WDoriginal weekdayAvg, weekendAvg)
rm(age, age.i, cleandata_mean, cleandata_median, dailysteps, dailysteps_mean, dailysteps_median Data, dayAvg, daysteps, daytype, MainData, naughts, plot_001, Plot_002, plot_003, Plot_004a, Plot_004b, plot_005a, plot_005b, plot_006, StepsGroup, WDoriginal, weekdayAvg, weekendAvg)
rm(age, age.i, cleandata_mean, cleandata_median, dailysteps)
rm(dailysteps_mean, dailysteps_median Data, dayAvg, daysteps, daytype) rm(MainData, naughts, plot_001, Plot_002, plot_003, Plot_004a, Plot_004b) rm(plot_005a, plot_005b, plot_006, StepsGroup, WDoriginal, weekdayAvg, weekendAvg)
rm(dailysteps_mean, dailysteps_median, Data, dayAvg, daysteps, daytype) rm(MainData, naughts, plot_001, Plot_002, plot_003, Plot_004a, Plot_004b) rm(plot_005a, plot_005b, plot_006, StepsGroup, WDoriginal, weekdayAvg, weekendAvg)
rm(dailysteps_mean, dailysteps_median, Data, dayAvg, daysteps, daytype)
rm(MainData, naughts, plot_001, Plot_002, plot_003, Plot_004a, Plot_004b)
rm(plot_005a, plot_005b, plot_006, StepsGroup, WDoriginal, weekdayAvg, weekendAvg)
rm(age, age.i, cleandata_mean, cleandata_median, dailysteps, dailysteps_mean, dailysteps_median, Data, dayAvg, daysteps, daytype, MainData, naughts, plot_001, Plot_002, plot_003, Plot_004a, Plot_004b, plot_005a, plot_005b, plot_006, StepsGroup, WDoriginal, weekdayAvg, weekendAvg)
ls()
par(mfrow = c(1, 2))
par(mar=c(4,4,1,0.5))
plot_004a <- hist(dailysteps$steps, main = "histogram: cleandata_mean") # Histogram of steps per day (clean data)
plot_004b <- barplot(dailysteps$steps, names.arg = dailysteps$date, xlab = "date", ylab = "steps", col="light blue", main = "barplot: cleandata_mean")
dev.copy(png,'plot_004.png')
dev.off()
par(mfrow = c(1, 2))
par(mar=c(4,4,1,0.5))
plot_004a <- hist(dailysteps$steps, main = "histogram: cleandata_mean") # Histogram of steps per day (clean data)
plot_004a <- hist(dailysteps$steps, main = "histogram - cleandata_mean") # Histogram of steps per day (clean data)
